@*Razor Pages, MVC, Blazor 공통 레이아웃*@

@using Microsoft.Extensions.Configuration 
@inject IConfiguration Configuration

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - @Configuration["TenantName"]</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/VisualAcademy.styles.css" asp-append-version="true" />
    <style>
        .nav-item.active > .nav-link {
            background-color: #f8f9fa;
            color: #495057;
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-page="/Index">@Configuration["TenantName"]</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Privacy">Privacy</a>
                        </li>

                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-dark" href="#"
                               id="navbarBooks" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Books
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="navbarBooks">
                                <li><a class="dropdown-item text-dark" href="#">C# 교과서</a></li>
                                <li><a class="dropdown-item text-dark" href="#">ASP.NET &amp; Core를 다루는 기술</a></li>
                                <li><hr class="dropdown-divider" /></li>
                                <li><a class="dropdown-item text-dark" href="#">Something else here</a></li>
                            </ul>
                        </li>

                    </ul>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2023 - @Configuration["TenantName"] - <a asp-area="" asp-page="/Privacy">Privacy</a>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script src="/_framework/blazor.server.js"></script>

    <script>
        // DOMContentLoaded 이벤트 리스너를 등록하여 문서 로드가 완료되면 실행
        document.addEventListener("DOMContentLoaded", function () {
            // 현재 페이지의 URL 경로를 가져옴
            var currentPageUrl = window.location.pathname;
            // 모든 .nav-item 요소를 선택
            var navItems = document.querySelectorAll(".nav-item");

            // navItems의 각 요소에 대해 반복
            navItems.forEach(function (navItem) {
                // .nav-link 요소를 찾음
                var navLink = navItem.querySelector(".nav-link");

                // navLink의 href 속성 값이 현재 페이지 URL과 일치하는지 확인
                if (navLink.getAttribute("href") === currentPageUrl) {
                    // 일치한다면, 해당 navItem에 'active' 클래스를 추가
                    navItem.classList.add("active");
                }
                else {
                    // 일치하지 않는다면, 해당 navItem에서 'active' 클래스를 제거
                    navItem.classList.remove("active");
                }
            });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
