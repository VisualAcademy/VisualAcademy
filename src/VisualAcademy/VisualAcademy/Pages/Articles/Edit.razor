@page "/Articles/Edit/{Id:int}"

@namespace ArticleApp.Pages.Articles

@inject NavigationManager NavigationManager
@inject IArticleRepository ArticleRepository

<h3>Edit</h3>

<div class="row">
    <div class="col-md-12">
        <EditForm Model="Model" OnValidSubmit="btnEdit_Click">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>
            <div class="form-group">
                <label for="id">ID: </label> @Model.Id
            </div>
            <div class="form-group">
                <label for="txtTitle">Title</label>
                <InputText id="txtTitle" class="form-control" placeholder="Enter Title"
                           @bind-Value="@Model.Title"></InputText>
                <ValidationMessage For="@(() => Model.Title)" class="form-text text-muted"></ValidationMessage>
            </div>
            <div class="form-group">
                <label for="txtContent">Content</label>
                <InputTextArea id="txtContent" class="form-control" placeholder="Enter Content"
                               rows="5"
                               @bind-Value="@Model.Content"></InputTextArea>
                <ValidationMessage For="@(() => Model.Content)" class="form-text text-muted"></ValidationMessage>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Edit</button>
                <a href="/Articles" class="btn btn-secondary">List</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    public Article Model { get; set; } = new Article();

    protected override async Task OnInitializedAsync()
    {
        Model = await ArticleRepository.GetArticleByIdAsync(Id);
    }

    protected async Task btnEdit_Click()
    {
        // 저장 로직
        await ArticleRepository.EditArticleAsync(Model);

        // 상세보기 페이지로 이동
        NavigationManager.NavigateTo($"/Articles/Details/{Id}");
    }
}
