@namespace VisualAcademy.Components

<!-- ModalForm.razor -->
<div style="position: fixed; z-index: 1; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0, 0, 0, 0.4); display: @(ShowModal ? "block" : "none")">
    <div style="position: relative; margin: 10% auto; padding: 0; width: 50%; max-width: 600px;">
        <div style="position: relative; display: flex; flex-direction: column; background-color: #fefefe; border-radius: 0.3rem; box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.5); animation-name: animatetop; animation-duration: 0.3s;">
            <div style="display: flex; justify-content: space-between; align-items: center; padding: 1rem; border-bottom: 1px solid #ccc; background-color: #f2f2f2;">
                <h5 style="margin: 0; font-size: 1.25rem; font-weight: bold;">@Title</h5>
                <button type="button" style="color: #aaa; float: right; font-size: 28px; font-weight: bold;" @onclick="CloseModal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div style="flex: 1; padding: 1rem;">
                <div style="height: 200px; overflow-y: auto;">
                    @ChildContent
                </div>
            </div>
            <div style="display: flex; justify-content: flex-end; padding: 0.5rem; border-top: 1px solid #ccc; background-color: #f2f2f2;">
                <button type="button" style="display: inline-block; font-weight: 400; color: #212529; text-align: center; vertical-align: middle; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; background-color: transparent; border: 1px solid #ccc; padding: 0.375rem 0.75rem; font-size: 1rem; line-height: 1.5; border-radius: 0.25rem; transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;" @onclick="CloseModal">Close</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public bool ShowModal { get; set; }

    [Parameter]
    public EventCallback<bool> ShowModalChanged { get; set; }

    private async Task CloseModal() {
        ShowModal = false;
        await ShowModalChanged.InvokeAsync(false);
    }
}